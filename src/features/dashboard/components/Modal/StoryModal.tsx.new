import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface Tab {
  id: string;
  label: string;
}

interface StoryModalProps {
  isOpen: boolean;
  onClose: () => void;
  defaultTab?: string;
}

const tabs: Tab[] = [
  { id: 'missions', label: 'مأموریت' },
  { id: 'leaves', label: 'مرخصی' },
  { id: 'performance', label: 'کارکرد' },
];

export const StoryModal: React.FC<StoryModalProps> = ({
  isOpen,
  onClose,
  defaultTab = 'missions',
}) => {
  const [currentSlide, setCurrentSlide] = useState(tabs.findIndex(tab => tab.id === defaultTab));

  useEffect(() => {
    if (isOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = 'unset';
    }

    return () => {
      document.body.style.overflow = 'unset';
    };
  }, [isOpen]);

  if (!isOpen) return null;

  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div 
          className="fixed inset-0 z-50 overflow-hidden"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.3 }}
        >
          {/* Backdrop */}
          <motion.div 
            className="absolute inset-0 bg-black/60"
            initial={{ opacity: 0 }}
            animate={{ opacity: 0.6 }}
            exit={{ opacity: 0 }}
            onClick={onClose}
          />
          
          {/* Modal Content */}
          <motion.div 
            className="relative h-full"
            drag="y"
            dragConstraints={{ top: 0 }}
            onDragEnd={(e, info) => {
              if (info.offset.y > 100) {
                onClose();
              }
            }}
          >
            {/* Header Section */}
            <motion.div 
              className="w-full bg-gradient-to-b from-[#0d2b6b] to-[#6ec6e7] pt-4 px-4 h-80"
              initial={{ y: -100, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              exit={{ y: -100, opacity: 0 }}
              transition={{ type: "spring", stiffness: 300, damping: 30 }}
            >
              <div className="text-white font-bold text-xl text-center mb-6">
                شرکت جهان گستر
              </div>
              <div className="flex justify-around w-full px-8">
                {tabs.map((tab, index) => (
                  <button
                    key={tab.id}
                    onClick={() => setCurrentSlide(index)}
                    className="flex flex-col items-center gap-2"
                  >
                    <motion.div 
                      className={`w-20 h-20 rounded-full flex items-center justify-center
                        ${index === currentSlide 
                          ? 'bg-white shadow-lg text-[#1a3766]' 
                          : 'bg-white/10 text-white'
                        }`}
                      whileHover={{ scale: 1.05 }}
                      whileTap={{ scale: 0.95 }}
                      transition={{ type: "spring", stiffness: 400, damping: 17 }}
                    >
                      {tab.id === 'missions' && (
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                          <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z" 
                            fill={index === currentSlide ? '#1a3766' : '#fff'}/>
                        </svg>
                      )}
                      {tab.id === 'leaves' && (
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                          <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11z"
                            fill={index === currentSlide ? '#1a3766' : '#fff'}/>
                        </svg>
                      )}
                      {tab.id === 'performance' && (
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                          <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                            fill={index === currentSlide ? '#1a3766' : '#fff'}/>
                        </svg>
                      )}
                    </motion.div>
                    <span className={`text-sm font-bold ${
                      index === currentSlide ? 'text-white' : 'text-white/80'
                    }`}>
                      {tab.label}
                    </span>
                  </button>
                ))}
              </div>
            </motion.div>

            {/* Content Section */}
            <motion.div 
              className="fixed bottom-0 left-0 right-0 w-full bg-white shadow-xl z-10
                h-[calc(100dvh-200px)] overflow-y-auto rounded-t-[2.5rem] -mt-8"
              initial={{ y: "100%" }}
              animate={{ y: 0 }}
              exit={{ y: "100%" }}
              transition={{ type: "spring", stiffness: 300, damping: 30 }}
            >
              {/* Content Area */}
              <div className="px-4 pt-8">
                {tabs[currentSlide].id === 'missions' && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-bold text-[#1a3766]">لیست مأموریت‌ها</h3>
                    {/* Add your missions content here */}
                  </div>
                )}
                {tabs[currentSlide].id === 'leaves' && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-bold text-[#1a3766]">لیست مرخصی‌ها</h3>
                    {/* Add your leaves content here */}
                  </div>
                )}
                {tabs[currentSlide].id === 'performance' && (
                  <div className="space-y-4">
                    <h3 className="text-lg font-bold text-[#1a3766]">گزارش کارکرد</h3>
                    {/* Add your performance content here */}
                  </div>
                )}
              </div>
            </motion.div>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
};
